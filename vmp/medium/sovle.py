code0 = [
    0x0000000000000000, 0x0000000000000000, 0x0000000000000012,
    0x0000000000000001, 0x0000000000000001, 0x0000000000000012,
    0x0000000000000002, 0x0000000000000002, 0x0000000000000012,
    0x0000000000000003, 0x0000000000000003, 0x0000000000000012,
    0x0000000000000006, 0x0000000000000006, 0x0000000000000012,
    0x0000000000000007, 0x0000000000000007, 0x0000000000000012,
    0x0000000000000000, 0x0000000000000069, 0x0000000000000001,
    0x0000000000000001, 0x000000000000006E, 0x0000000000000001,
    0x0000000000000002, 0x0000000000000070, 0x0000000000000001,
    0x0000000000000003, 0x0000000000000075, 0x0000000000000001,
    0x0000000000000006, 0x0000000000000074, 0x0000000000000001,
    0x0000000000000007, 0x0000000000000020, 0x0000000000000001,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000001, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000002, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000003, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000006, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000007, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000000, 0x0000000000000066, 0x0000000000000001,
    0x0000000000000001, 0x000000000000006C, 0x0000000000000001,
    0x0000000000000002, 0x0000000000000061, 0x0000000000000001,
    0x0000000000000003, 0x0000000000000067, 0x0000000000000001,
    0x0000000000000006, 0x000000000000003A, 0x0000000000000001,
    0x0000000000000007, 0x0000000000000020, 0x0000000000000001,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000001, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000002, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000003, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000006, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000007, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000001, 0x0000000000000001, 0x0000000000000012,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000017,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000005,
    0x0000000000000001, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000001, 0x0000000000000026, 0x000000000000001A,
    0x000000000000001F, 0x0000000000000000, 0x000000000000001E,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000019
]

code1 = [
    0x0000000000000002, 0x0000000000000002, 0x0000000000000012,
    0x0000000000000002, 0x00000000000000C7, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000183, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000053, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000127, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x00000000000000BB, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000073, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000004F, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000077, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000077, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000127, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000107, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000008F, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000063, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000003F, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000006B, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000127, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000014B, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000127, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x00000000000000B7, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000063, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000005F, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000006B, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000003F, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000127, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x00000000000000C7, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000007B, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000067, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000087, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000093, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000063, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x000000000000013F, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000127, 0x0000000000000000,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000019
]

code2 = [
    0x0000000000000002, 0x0000000000000002, 0x0000000000000012,
    0x0000000000000000, 0x0000000000000002, 0x0000000000000003,
    0x0000000000000000, 0x0000000000000037, 0x0000000000000009,
    0x0000000000000002, 0x0000000000000000, 0x0000000000000004,
    0x0000000000000002, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000002, 0x0000000000000020, 0x000000000000001A,
    0x0000000000000001, 0x0000000000000000, 0x000000000000001E,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000019
]

code3 = [
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000000, 0x000000000000007D, 0x000000000000001A,
    0x0000000000000012, 0x0000000000000000, 0x000000000000001C,
    0x0000000000000000, 0x0000000000000062, 0x0000000000000001,
    0x0000000000000001, 0x0000000000000079, 0x0000000000000001,
    0x0000000000000002, 0x0000000000000065, 0x0000000000000001,
    0x0000000000000003, 0x000000000000007E, 0x0000000000000001,
    0x0000000000000006, 0x000000000000007E, 0x0000000000000001,
    0x0000000000000007, 0x000000000000007E, 0x0000000000000001,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000001, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000002, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000003, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000006, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000007, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000000, 0x000000000000000A, 0x0000000000000001,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000019,
    0x0000000000000008, 0x0000000000000100, 0x0000000000000001,
    0x0000000000000008, 0x00000000000000E1, 0x000000000000001A,
    0x0000000000000019, 0x0000000000000000, 0x000000000000001E,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000008, 0x0000000000000000, 0x0000000000000004,
    0x0000000000000008, 0x0000000000000001, 0x0000000000000009,
    0x0000000000000013, 0x0000000000000000, 0x000000000000001D,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000000, 0x000000000000007B, 0x000000000000001A,
    0x0000000000000003, 0x0000000000000000, 0x000000000000001F,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000000, 0x0000000000000067, 0x000000000000001A,
    0x0000000000000003, 0x0000000000000000, 0x000000000000001F,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000000, 0x0000000000000061, 0x000000000000001A,
    0x0000000000000003, 0x0000000000000000, 0x000000000000001F,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000000, 0x000000000000006C, 0x000000000000001A,
    0x0000000000000003, 0x0000000000000000, 0x000000000000001F,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000006,
    0x0000000000000000, 0x0000000000000066, 0x000000000000001A,
    0x0000000000000003, 0x0000000000000000, 0x000000000000001F,
    0x0000000000000009, 0x0000000000000009, 0x0000000000000012,
    0x000000000000000A, 0x00000000000000E1, 0x0000000000000001,
    0x0000000000000007, 0x0000000000000009, 0x0000000000000003,
    0x0000000000000006, 0x000000000000000A, 0x0000000000000003,
    0x0000000000000006, 0x0000000000000063, 0x0000000000000011,
    0x0000000000000006, 0x0000000000000002, 0x000000000000000D,
    0x0000000000000006, 0x0000000000000007, 0x000000000000001B,
    0x0000000000000003, 0x0000000000000000, 0x000000000000001F,
    0x0000000000000009, 0x0000000000000001, 0x0000000000000007,
    0x000000000000000A, 0x0000000000000001, 0x0000000000000007,
    0x0000000000000009, 0x0000000000000020, 0x000000000000001A,
    0x000000000000002A, 0x0000000000000000, 0x000000000000001E,
    0x0000000000000000, 0x0000000000000063, 0x0000000000000001,
    0x0000000000000001, 0x000000000000006F, 0x0000000000000001,
    0x0000000000000002, 0x0000000000000072, 0x0000000000000001,
    0x0000000000000003, 0x0000000000000072, 0x0000000000000001,
    0x0000000000000006, 0x0000000000000065, 0x0000000000000001,
    0x0000000000000007, 0x0000000000000063, 0x0000000000000001,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000001, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000002, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000003, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000006, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000007, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000000, 0x0000000000000074, 0x0000000000000001,
    0x0000000000000001, 0x000000000000006C, 0x0000000000000001,
    0x0000000000000002, 0x0000000000000079, 0x0000000000000001,
    0x0000000000000003, 0x0000000000000021, 0x0000000000000001,
    0x0000000000000006, 0x000000000000000A, 0x0000000000000001,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000001, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000002, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000003, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000006, 0x0000000000000000, 0x0000000000000018,
    0x0000000000000000, 0x0000000000000000, 0x0000000000000019
]

'''
case 0:                      // mov ds[reg],imm
case 1:                      // mov reg,imm
case 2:                      // mov reg,reg
case 3:                      // mov reg,ds[reg]
case 4:                      // mov ds[reg],reg
case 5:                      // push reg
case 6:                      // pop reg
case 7:                      // add reg,imm
case 8:                      // add reg,reg
case 9:                      // sub reg,imm
case 10:                     // sub reg,reg
case 11:                     // mul reg,imm
case 12:                     // mul reg,reg
case 13:                     // shl reg,imm
case 14:                     // shl reg,reg
case 15:                     // shr reg,imm
case 16:                     // shr reg,reg
case 17:                     // xor reg,imm
case 18:                     // xor reg,reg
case 19:                     // or reg,imm
case 20:                     // or reg,reg
case 21:                     // and reg,imm
case 22:                     // and reg,reg
case 23:                     // getchar
case 24:                     // putchar
case 26:                     // cmp reg,imm
case 27:                     // cmp reg,reg
case 28:                     // jzf imm*24
case 29:                     // jmp imm*24
case 30:                     // jb imm*24
case 31:                     // jnzf imm*24
'''

print('asm:')

def vm(code):
    eip = 0
    while True:
        op = code[eip * 3 + 2]
        print("%02x:" % eip, end=" ")
        if op == 0x19:
            print("ret!!!")
        if eip == len(code) // 3 - 1:
            break
        if op == 0:
            print("mov ds[r%x],0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 1:
            print("mov r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 2:
            print("mov r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 3:
            print("mov r%x,ds[r%x]" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 4:
            print("mov ds[r%x],r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 5:
            print("push r%x" % (code[eip * 3 + 0]))
        elif op == 6:
            print("pop r%x" % (code[eip * 3 + 0]))
        elif op == 7:
            print("add r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 8:
            print("add r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 9:
            print("sub r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 10:
            print("sub r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 11:
            print("mul r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 12:
            print("mul r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 13:
            print("shl r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 14:
            print("shl r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 15:
            print("shr r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 16:
            print("shr r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 17:
            print("xor r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 18:
            print("xor r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 19:
            print("or r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 20:
            print("or r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 21:
            print("and r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 22:
            print("and r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 23:
            print("getchar(r%x)" % (code[eip * 3 + 0]))
        elif op == 24:
            print("putchar(r%x)" % (code[eip * 3 + 0]))
        elif op == 26:
            print("cmp r%x,0x%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 27:
            print("cmp r%x,r%x" % (code[eip * 3 + 0], code[eip * 3 + 1]))
        elif op == 28:
            print("jz 0x%x" % (code[eip * 3 + 0]))
        elif op == 29:
            print("jmp 0x%x" % (code[eip * 3 + 0]))
        elif op == 30:
            print("jb 0x%x" % (code[eip * 3 + 0]))
        elif op == 31:
            print("jnz 0x%x" % (code[eip * 3 + 0]))
        else:
            print("nop")
        eip += 1


vm(code0)
print('--------------------------')
vm(code1)
print('--------------------------')
vm(code2)
print('--------------------------')
vm(code3)

def input(input):
    print("input flag:",end='')
    flag = input
    print(flag)
    return flag

def initds():
    ds = [199, 387, 83, 295, 187, 115, 79, 119, 119, 295, 263, 143, 99, 63, 107, 295, 331, 295, 183, 99, 95, 107, 63, 295, 199, 123, 103, 135, 147, 99, 319, 295]
    return ds

def sub0x37(ds):
    for i in range(0x20):
        ds[i] -= 0x37
    return ds

def check(flag,ds):
    if (ord(flag[-1:]))!=0x7d:
        return False
    es = list(map(ord,list(flag[5:-1])))
    for i in range(0x20):
        if (es[i]^0x63)<<2 != ds[i]:
            return False
    if flag[:5] != 'flag{':
        return False
    return True

def check2(flag,ds):
    stack = list(map(ord,list(flag[5:-1])))
    for i in range(0x20):
        if (stack[i]^0x63)<<2 != ds[i]:
            return False
    if flag[:5] != 'flag{':
        return False
    return True

def easyparser(flag):
    input(flag)
    ds = initds()
    ds = sub0x37(ds)
    if check(flag,ds):
        print("correctly!")
    else:
        print("bye~~~")


print('--------------------------')
print('get flag!')

# check flag
# 13_op:12:  xor r9,r9
# 4_op:1:  mov ra,ie1
# 15_op:3:  mov r7,ds[r9]
# 16_op:3:  mov r6,ds[ra]  => mov r6,stack[r9]
# 17_op:11:  xor r6,i63
# 18_op:d:  shl r6,i2
# 19_op:1b:  cmp r6,r7

ds = [199, 387, 83, 295, 187, 115, 79, 119, 119, 295, 263, 143, 99, 63, 107, 295, 331, 295, 183, 99, 95, 107, 63, 295, 199, 123, 103, 135, 147, 99, 319, 295]
flag = ''
for i in range(0x20):
    flag += chr(((ds[i]-0x37)>>2)^0x63)

flag = 'flag{%s}' % flag
print(flag)


print("--------------------------")
print("check flag!")
easyparser(flag)